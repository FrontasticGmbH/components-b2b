{"version":3,"file":"static/chunks/5111.7d08ab56cd435047.js","mappings":"6MAiBA,MAZiB,OAAC,GAYHA,OAZKC,CAAQ,EAYJ,SAZMC,CAAS,CAAiB,GAGhDC,EAFOC,EAAAA,QAAAA,CAAAA,MAAe,OAACH,EAAAA,EAAY,IAEdI,OAAO,CAAC,KAFNJ,GAEe,KAAKI,OAAO,CAAC,QAAS,KAE5DC,EAAgBC,CAAAA,EAAAA,EAAAA,QAAAA,CAAQA,CAACJ,GAE/B,MACE,UAACK,IAAAA,CAAEN,UAAWO,CAAAA,EAAAA,EAAAA,CAAAA,CAAUA,CAAC,sBAAuBP,GAAYQ,wBAAyB,CAAEC,OAAQL,CAAc,GAEjH,ECoBA,EA7Ba,MA6BEM,EAVCC,EAUGD,EAAC,CA7BN,OAAEE,CAAK,OAAEC,CAAK,aAAEC,CAAW,MAAEH,CAAI,CAAa,GAC1D,MACE,WAACI,MAAAA,WACEH,GACC,UAACG,MAAAA,CAAIf,UAAU,2EACb,UAACgB,EAAAA,CAAKA,CAAAA,CAAE,GAAGJ,CAAK,CAAEK,UAAKJ,EAAAA,EAAS,GAAIK,IAAI,IAACC,GAAlBN,GAAyB,CAAEO,UAAW,OAAQ,MAGxEP,GACC,UAACQ,KAAAA,CAAGrB,UAAU,kGACXa,IAGJC,GACC,UAAChB,EAAQA,CAACE,KAADF,KAAW,uEAA+DgB,IAEpFH,EAAKW,IAAI,EACR,UAACC,EAAAA,OAAIA,CAAAA,CACHvB,UAAU,qEACVwB,KAAMb,QAAAA,EAAAA,EAAKa,IAAAA,GAALb,KAAAA,IAAAA,EAAAA,EAAa,IACnBc,aAAcd,EAAKc,YAAY,UAE9Bd,EAAKW,IAAI,KAKpB,iBCnBA,MAR0B,OAAC,CAAEI,KAAM,MAAEf,CAAI,CAQ1BgB,SAR4BC,CAAQ,CAAE,GAAGF,EAAM,CAAsB,EAQnD,CAP/B,MACE,UAACX,MAAAA,CAAIf,UAAU,4CACb,UAACU,EAAIA,CAAE,CAAFA,EAAKgB,CAAI,CAAEf,KAAMkB,CAAAA,EAAAA,EAAAA,CAAAA,CAAgBA,CAAClB,EAAMiB,MAGnD","sources":["webpack://_N_E/./src/components/atoms/markdown/index.tsx","webpack://_N_E/./src/components/molecules/blog/index.tsx","webpack://_N_E/./src/lib/tastics/blog/components/blog-client-wrapper/index.tsx"],"sourcesContent":["import { markdown } from 'markdown';\nimport { sanitize } from 'isomorphic-dompurify';\nimport { classnames } from '@/utils/classnames/classnames';\nimport { MarkdownProps } from './types';\n\nconst Markdown = ({ children, className }: MarkdownProps) => {\n  const html = markdown.toHTML(children ?? '');\n\n  const dangerousHtml = html.replace(/&lt;/g, '<').replace(/&gt;/g, '>');\n\n  const sanitizedHtml = sanitize(dangerousHtml);\n\n  return (\n    <p className={classnames('whitespace-pre-wrap', className)} dangerouslySetInnerHTML={{ __html: sanitizedHtml }} />\n  );\n};\n\nexport default Markdown;\n","import React from 'react';\nimport Image from '@/components/atoms/Image';\nimport Link from '@/components/atoms/link';\nimport Markdown from '@/components/atoms/markdown';\nimport { BlogProps } from './types';\n\nconst Blog = ({ image, title, description, link }: BlogProps) => {\n  return (\n    <div>\n      {image && (\n        <div className=\"relative w-full overflow-hidden rounded-sm pb-[63%] xl:pb-[41%]\">\n          <Image {...image} alt={title ?? ''} fill style={{ objectFit: 'cover' }} />\n        </div>\n      )}\n      {title && (\n        <h5 className=\"pt-3 text-16 font-semibold uppercase leading-loose text-gray-700 md:text-18 lg:text-20\">\n          {title}\n        </h5>\n      )}\n      {description && (\n        <Markdown className=\"pt-2 text-14 leading-loose text-gray-600 md:pt-3 md:text-16\">{description}</Markdown>\n      )}\n      {link.name && (\n        <Link\n          className=\"pt-5 text-14 text-gray-700 underline underline-offset-2 md:text-16\"\n          href={link.href ?? '#'}\n          openInNewTab={link.openInNewTab}\n        >\n          {link.name}\n        </Link>\n      )}\n    </div>\n  );\n};\n\nexport default Blog;\n","import React from 'react';\nimport Blog from '@/components/molecules/blog';\nimport { resolveReference } from '@/utils/lib/resolve-reference';\nimport { TasticProps } from '@/lib/tastics/types';\nimport { Props } from '../../types';\n\nconst BlogClientWrapper = ({ data: { link, linkName, ...data } }: TasticProps<Props>) => {\n  return (\n    <div className=\"mx-auto max-w-[680px] p-4 md:p-6\">\n      <Blog {...data} link={resolveReference(link, linkName)} />\n    </div>\n  );\n};\n\nexport default BlogClientWrapper;\n"],"names":["Markdown","children","className","dangerousHtml","markdown","replace","sanitizedHtml","sanitize","p","classnames","dangerouslySetInnerHTML","__html","Blog","link","image","title","description","div","Image","alt","fill","style","objectFit","h5","name","Link","href","openInNewTab","data","BlogClientWrapper","linkName","resolveReference"],"sourceRoot":"","ignoreList":[]}