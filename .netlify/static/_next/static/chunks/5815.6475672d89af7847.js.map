{"version":3,"file":"static/chunks/5815.6475672d89af7847.js","mappings":"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","sources":["webpack://_N_E/./src/lib/hooks/useOrders/index.ts","webpack://_N_E/./src/lib/tastics/order-detail/components/order-detail-client-wrapper/index.tsx"],"sourcesContent":["import { useCallback } from 'react';\nimport { sdk } from '@/sdk';\nimport useSWR, { useSWRConfig } from 'swr';\nimport { Order } from '@shared/types/cart/Order';\nimport { PaginatedResult } from '@shared/types/result';\nimport { Options } from './types';\n\nconst useOrders = ({\n  cursor,\n  limit,\n  states,\n  ids,\n  businessUnitKey,\n  createdFrom,\n  createdTo,\n  sortAttributes,\n}: Options) => {\n  const { mutate: globalMutate } = useSWRConfig();\n\n  const ordersResponse = useSWR(\n    !businessUnitKey\n      ? null\n      : [\n          '/action/cart/queryOrders',\n          limit,\n          cursor,\n          ids,\n          states,\n          createdFrom,\n          createdTo,\n          businessUnitKey,\n          sortAttributes,\n        ],\n    () =>\n      sdk.composableCommerce.cart.queryOrders({\n        ...(limit ? { limit } : {}),\n        ...(cursor ? { cursor } : {}),\n        ...(ids ? { orderNumbers: ids } : {}),\n        ...(states ? { orderStates: states } : {}),\n        ...(createdFrom ? { createdFrom } : {}),\n        ...(createdTo ? { createdTo } : {}),\n        ...(businessUnitKey ? { businessUnitKey } : {}),\n        ...(sortAttributes ? { sortAttributes } : ''),\n      }),\n    { revalidateIfStale: true },\n  );\n\n  const isLoading = !businessUnitKey || ordersResponse.isLoading;\n\n  const mutateAll = useCallback(() => {\n    globalMutate((key) => typeof key === 'object' && key?.[0] === '/action/cart/queryOrders');\n  }, [globalMutate]);\n\n  const orders = ordersResponse.data?.isError\n    ? ({} as Partial<PaginatedResult<Order>>)\n    : (ordersResponse.data?.data ?? ({} as Partial<PaginatedResult<Order>>));\n\n  const cancelOrder = useCallback(\n    async (order: Order) => {\n      if (!order.orderNumber || !businessUnitKey) return {} as Order;\n\n      const response = await sdk.composableCommerce.cart.cancelOrder(\n        {\n          orderId: order.orderNumber,\n        },\n        { businessUnitKey },\n      );\n\n      mutateAll();\n\n      return (response.isError ? {} : response.data) as Order;\n    },\n    [businessUnitKey, mutateAll],\n  );\n\n  const replicateOrder = useCallback(\n    async (orderId: string) => {\n      const response = await sdk.composableCommerce.cart.replicateOrder({ orderId }, { businessUnitKey });\n\n      mutateAll();\n\n      return (response.isError ? {} : response.data) as Order;\n    },\n    [businessUnitKey, mutateAll],\n  );\n\n  return { orders, isLoading, cancelOrder, replicateOrder };\n};\n\nexport default useOrders;\n","'use client';\n\nimport React from 'react';\nimport { DataSource } from '@/types/lib/datasources';\nimport Dashboard from '@/components/pages/dashboard';\nimport { DashboardLinks } from '@/components/pages/dashboard/constants';\nimport OrderDetailsPage from '@/components/pages/dashboard/pages/order-details';\nimport useAccount from '@/lib/hooks/useAccount';\nimport { mapOrder } from '@/utils/mappers/map-order';\nimport useOrders from '@/lib/hooks/useOrders';\nimport useCustomRouter from '@/hooks/useCustomRouter';\nimport useAccountRoles from '@/lib/hooks/useAccountRoles';\nimport { useStoreAndBusinessUnits } from '@/providers/store-and-business-units';\nimport { TasticProps } from '@/lib/tastics/types';\nimport useBusinessUnits from '@/lib/hooks/useBusinessUnits';\nimport { DataSourceProps } from '../../types';\n\nconst OrderDetailClientWrapper = ({ data }: TasticProps<DataSource<DataSourceProps>>) => {\n  const router = useCustomRouter();\n\n  const { businessUnits } = useBusinessUnits();\n\n  const { selectedBusinessUnit } = useStoreAndBusinessUnits();\n\n  const { account } = useAccount();\n\n  const { permissions } = useAccountRoles(selectedBusinessUnit?.key);\n\n  const order = data.data?.dataSource?.order;\n\n  const { cancelOrder, replicateOrder } = useOrders({ businessUnitKey: selectedBusinessUnit?.key });\n\n  if (!order) return <></>;\n\n  return (\n    <Dashboard href={DashboardLinks.orders} userName={account?.firstName}>\n      <OrderDetailsPage\n        order={mapOrder(order, { businessUnits })}\n        viewOnly={!permissions.UpdateMyOrders}\n        onReturn={async () => {\n          const res = await cancelOrder(order);\n          router.refresh();\n          return !!res.orderId;\n        }}\n        onReorder={async () => {\n          const res = await replicateOrder(order.orderId as string);\n\n          const success = !!res.orderId;\n\n          if (success) router.push(`/thank-you?orderId=${res.orderId}`);\n\n          return !!res.orderId;\n        }}\n      />\n    </Dashboard>\n  );\n};\n\nexport default OrderDetailClientWrapper;\n"],"names":["ordersResponse","cursor","useOrders","limit","states","ids","businessUnitKey","createdFrom","createdTo","sortAttributes","mutate","globalMutate","useSWRConfig","useSWR","sdk","composableCommerce","cart","queryOrders","orderNumbers","orderStates","revalidateIfStale","isLoading","mutateAll","useCallback","key","orders","data","isError","cancelOrder","order","orderNumber","response","orderId","replicateOrder","router","useCustomRouter","OrderDetailClientWrapper","businessUnits","useBusinessUnits","selectedBusinessUnit","useStoreAndBusinessUnits","account","useAccount","permissions","useAccountRoles","dataSource","Dashboard","href","DashboardLinks","userName","firstName","OrderDetailsPage","mapOrder","viewOnly","UpdateMyOrders","onReturn","res","refresh","onReorder","push"],"sourceRoot":"","ignoreList":[]}