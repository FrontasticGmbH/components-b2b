{"version":3,"file":"static/chunks/5545.e2905e0c20d0956d.js","mappings":"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","sources":["webpack://_N_E/./src/components/pages/dashboard/components/order-status-tag/index.tsx","webpack://_N_E/./src/components/pages/dashboard/pages/orders/components/orders-table/index.tsx","webpack://_N_E/./src/lib/hooks/useOrders/index.ts","webpack://_N_E/./src/utils/mappers/map-lineitem.ts","webpack://_N_E/./src/utils/mappers/map-order.ts"],"sourcesContent":["import React from 'react';\nimport { Variant as TagVariant } from '@/components/atoms/tag/types';\nimport Tag from '@/components/atoms/tag';\nimport { OrderStatus } from '@/types/entity/order';\nimport useTranslation from '@/providers/I18n/hooks/useTranslation';\nimport { OrderStatusTagProps } from './types';\n\nconst OrderStatusTag = ({ status }: OrderStatusTagProps) => {\n  const { translate } = useTranslation();\n\n  const statusVariant = {\n    Pending: 'warning',\n    Confirmed: 'primary',\n    Cancelled: 'danger',\n    Returned: 'secondary',\n    Delivered: 'success',\n    Shipped: 'primary',\n  } as Record<OrderStatus, TagVariant>;\n\n  return (\n    <Tag className=\"capitalize\" variant={statusVariant[status]}>\n      {translate(`orders.status.${status.toLowerCase()}`)}\n    </Tag>\n  );\n};\n\nexport default OrderStatusTag;\n","import React from 'react';\nimport Table from '@/components/organisms/table';\nimport useTranslation from '@/providers/I18n/hooks/useTranslation';\nimport Button from '@/components/atoms/button';\nimport Link from '@/components/atoms/link';\nimport useFormat from '@/hooks/useFormat';\nimport OrderStatusTag from '@/components/pages/dashboard/components/order-status-tag';\nimport { DashboardLinks } from '@/components/pages/dashboard/constants';\nimport { TablePaginationProps } from '@/components/organisms/table/types';\nimport { Order } from '@/types/entity/order';\nimport Accordion from '@/components/molecules/accordion';\n\ninterface OrdersTableProps {\n  orders: Order[];\n  pagination?: TablePaginationProps;\n}\n\nconst OrdersTable: React.FC<OrdersTableProps> = ({ orders, pagination }) => {\n  const { translate } = useTranslation();\n\n  const { formatCurrency } = useFormat();\n\n  return (\n    <Table>\n      <Table.Container className=\"hidden table-fixed rounded-md md:table\">\n        <Table.Head className=\"border-b text-12 font-bold\">\n          <Table.Cell isHeadCell>{translate('common.status')}</Table.Cell>\n          <Table.Cell isHeadCell>{translate('common.id')}</Table.Cell>\n          <Table.Cell isHeadCell>{translate('common.date')}</Table.Cell>\n          <Table.Cell isHeadCell>{translate('common.business.unit')}</Table.Cell>\n          <Table.Cell isHeadCell className=\"text-right\">\n            {translate('common.total')}\n          </Table.Cell>\n          <Table.Cell isButtonsHead />\n        </Table.Head>\n        <Table.Body>\n          {(orders ?? []).map(({ id, number, status, creationDate, businessUnit, total, currency }) => (\n            <Table.Row key={id}>\n              <Table.Cell>\n                <div className=\"flex items-center justify-between gap-2\">\n                  <OrderStatusTag status={status} />\n                </div>\n              </Table.Cell>\n              <Table.Cell>\n                <span className=\"block max-w-full truncate\">{number}</span>\n              </Table.Cell>\n              <Table.Cell>{new Date(creationDate).toLocaleDateString()}</Table.Cell>\n              <Table.Cell>\n                <p className=\"w-36 truncate lg:w-full\">{businessUnit}</p>\n              </Table.Cell>\n              <Table.Cell className=\"text-right\">{formatCurrency(total, currency)}</Table.Cell>\n              <Table.Cell isButtonsCell>\n                <div className=\"flex justify-end\">\n                  <Link href={DashboardLinks.orderDetail(id)} underlineOnHover={false}>\n                    <Button variant=\"secondary\">{translate('common.view')}</Button>\n                  </Link>\n                </div>\n              </Table.Cell>\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table.Container>\n\n      <Table.Container className=\"table rounded-md md:hidden\">\n        <Table.Head className=\"border-b text-12 font-bold\">\n          <Table.Row>\n            <Table.Cell isHeadCell>{translate('common.id')}</Table.Cell>\n          </Table.Row>\n        </Table.Head>\n        <Table.Body>\n          {(orders ?? []).map(({ id, number, status, creationDate, businessUnit, total, currency }) => (\n            <Table.Row key={id}>\n              <Table.Cell>\n                <Accordion className=\"border-none text-gray-600\">\n                  <Accordion.Button defaultSpacing={false}>\n                    <p className=\"font-semibold\">{number}</p>\n                    <p className=\"my-2 text-14 text-gray-500\">{new Date(creationDate).toLocaleDateString()}</p>\n                    <div className=\"\">\n                      <OrderStatusTag status={status} />\n                    </div>\n                  </Accordion.Button>\n                  <Accordion.Panel defaultSpacing={false}>\n                    <div className=\"mt-2 flex gap-2\">\n                      <p className=\"basis-32 font-semibold uppercase\"> {translate('common.business.unit')}:</p>\n                      <p className=\"w-48 truncate\">{businessUnit}</p>\n                    </div>\n                    <div className=\"flex gap-2\">\n                      <p className=\"basis-32 font-semibold uppercase\">{translate('common.total')}:</p>\n                      <p>{formatCurrency(total, currency)}</p>\n                    </div>\n\n                    <div className=\"mt-4\">\n                      <Link href={DashboardLinks.orderDetail(id)} underlineOnHover={false}>\n                        <Button variant=\"secondary\">{translate('common.view')}</Button>\n                      </Link>\n                    </div>\n                  </Accordion.Panel>\n                </Accordion>\n              </Table.Cell>\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table.Container>\n\n      {pagination && (\n        <Table.Pagination\n          page={pagination.page}\n          limit={pagination.limit}\n          totalItems={pagination.totalItems}\n          onNext={pagination.onNext}\n          onPrevious={pagination.onPrevious}\n          onRowsPerPageChange={pagination.onRowsPerPageChange}\n        />\n      )}\n    </Table>\n  );\n};\n\nexport default OrdersTable;\n","import { useCallback } from 'react';\nimport { sdk } from '@/sdk';\nimport useSWR, { useSWRConfig } from 'swr';\nimport { Order } from '@shared/types/cart/Order';\nimport { PaginatedResult } from '@shared/types/result';\nimport { Options } from './types';\n\nconst useOrders = ({\n  cursor,\n  limit,\n  states,\n  ids,\n  businessUnitKey,\n  createdFrom,\n  createdTo,\n  sortAttributes,\n}: Options) => {\n  const { mutate: globalMutate } = useSWRConfig();\n\n  const ordersResponse = useSWR(\n    !businessUnitKey\n      ? null\n      : [\n          '/action/cart/queryOrders',\n          limit,\n          cursor,\n          ids,\n          states,\n          createdFrom,\n          createdTo,\n          businessUnitKey,\n          sortAttributes,\n        ],\n    () =>\n      sdk.composableCommerce.cart.queryOrders({\n        ...(limit ? { limit } : {}),\n        ...(cursor ? { cursor } : {}),\n        ...(ids ? { orderNumbers: ids } : {}),\n        ...(states ? { orderStates: states } : {}),\n        ...(createdFrom ? { createdFrom } : {}),\n        ...(createdTo ? { createdTo } : {}),\n        ...(businessUnitKey ? { businessUnitKey } : {}),\n        ...(sortAttributes ? { sortAttributes } : ''),\n      }),\n    { revalidateIfStale: true },\n  );\n\n  const isLoading = !businessUnitKey || ordersResponse.isLoading;\n\n  const mutateAll = useCallback(() => {\n    globalMutate((key) => typeof key === 'object' && key?.[0] === '/action/cart/queryOrders');\n  }, [globalMutate]);\n\n  const orders = ordersResponse.data?.isError\n    ? ({} as Partial<PaginatedResult<Order>>)\n    : (ordersResponse.data?.data ?? ({} as Partial<PaginatedResult<Order>>));\n\n  const cancelOrder = useCallback(\n    async (order: Order) => {\n      if (!order.orderNumber || !businessUnitKey) return {} as Order;\n\n      const response = await sdk.composableCommerce.cart.cancelOrder(\n        {\n          orderId: order.orderNumber,\n        },\n        { businessUnitKey },\n      );\n\n      mutateAll();\n\n      return (response.isError ? {} : response.data) as Order;\n    },\n    [businessUnitKey, mutateAll],\n  );\n\n  const replicateOrder = useCallback(\n    async (orderId: string) => {\n      const response = await sdk.composableCommerce.cart.replicateOrder({ orderId }, { businessUnitKey });\n\n      mutateAll();\n\n      return (response.isError ? {} : response.data) as Order;\n    },\n    [businessUnitKey, mutateAll],\n  );\n\n  return { orders, isLoading, cancelOrder, replicateOrder };\n};\n\nexport default useOrders;\n","import { Product } from '@/types/entity/product';\nimport { LineItem } from '@shared/types/cart/LineItem';\n\nexport const mapLineItem = (lineItem: LineItem): Product => {\n  const variant = lineItem.variant;\n\n  const price =\n    (lineItem.price?.centAmount ?? variant?.price?.centAmount ?? 0) -\n    (lineItem.taxRate?.includedInPrice ? (lineItem.taxed?.taxAmount?.centAmount ?? 0) : 0);\n  const discountedPrice = lineItem.discountedPrice?.centAmount ?? variant?.discountedPrice?.centAmount;\n  const fractionDigits = lineItem.price?.fractionDigits ?? variant?.price?.fractionDigits ?? 2;\n  const currency = lineItem.price?.currencyCode ?? variant?.price?.currencyCode ?? 'USD';\n\n  return {\n    id: lineItem.lineItemId,\n    url: lineItem._url,\n    sku: variant?.sku,\n    name: lineItem.name,\n    description: variant?.attributes?.['Product-Specifications'],\n    images: variant?.images,\n    quantity: lineItem.count,\n    price: price / Math.pow(10, fractionDigits),\n    ...(discountedPrice ? { discountedPrice: discountedPrice / Math.pow(10, fractionDigits) } : {}),\n    currency,\n    inStock: variant?.isOnStock,\n    maxQuantity: variant?.isOnStock ? variant.availableQuantity : 0,\n    model: variant?.sku,\n  } as Product;\n};\n","import { Currency } from '@/types/currency';\nimport { Order as MappedOrder, OrderStatus } from '@/types/entity/order';\nimport { Order } from '@shared/types/cart/Order';\nimport { calculateTransaction } from '@/lib/utils/calculate-transaction';\nimport { BusinessUnit } from '@shared/types/business-unit';\nimport { mapLineItem } from './map-lineitem';\n\nconst orderStatus = (order: Order): OrderStatus => {\n  if (order.shipmentState === 'Delivered' || order.orderState === 'Complete') return 'Delivered';\n  else if (order.orderState === 'Open') return 'Pending';\n  else if (order.orderState === 'Confirmed') return order.shipmentState === 'Shipped' ? 'Shipped' : 'Confirmed';\n  else return 'Returned';\n};\n\nexport const mapOrder = (order: Order, { businessUnits }: { businessUnits?: BusinessUnit[] } = {}): MappedOrder => {\n  const currencyCode = (order.sum?.currencyCode ?? 'USD') as Currency;\n  const mappedStatus = orderStatus(order);\n\n  const { total, subtotal, tax, discount, shipping } = calculateTransaction(order);\n\n  return {\n    id: order.orderId ?? '',\n    number: order.orderNumber ?? '',\n    businessUnit: businessUnits?.find((bu) => bu.key === order.businessUnitKey)?.name ?? order.businessUnitKey ?? '',\n    creationDate: order.createdAt ? new Date(order.createdAt).toISOString() : '',\n    status: mappedStatus,\n    items: (order.lineItems ?? []).map(mapLineItem),\n    currency: currencyCode,\n    taxCosts: tax.centAmount,\n    subtotal: subtotal.centAmount,\n    discount: discount.centAmount,\n    shippingCosts: shipping.centAmount,\n    total: total.centAmount,\n    isFromAQuote: !!order.quoteId,\n    purchaseOrderNumber: order.purchaseOrderNumber,\n  };\n};\n"],"names":["status","translate","useTranslation","Tag","className","variant","statusVariant","Pending","Confirmed","Cancelled","Returned","Delivered","Shipped","toLowerCase","OrdersTable","orders","pagination","formatCurrency","useFormat","Table","Container","Head","Cell","isHeadCell","isButtonsHead","Body","map","id","number","creationDate","businessUnit","total","currency","Row","div","OrderStatusTag","span","Date","toLocaleDateString","p","isButtonsCell","Link","href","DashboardLinks","orderDetail","underlineOnHover","Button","Accordion","defaultSpacing","Panel","Pagination","page","limit","totalItems","onNext","onPrevious","onRowsPerPageChange","ordersResponse","cursor","useOrders","states","ids","businessUnitKey","createdFrom","createdTo","sortAttributes","mutate","globalMutate","useSWRConfig","useSWR","sdk","composableCommerce","cart","queryOrders","orderNumbers","orderStates","revalidateIfStale","isLoading","mutateAll","useCallback","key","data","isError","cancelOrder","order","orderNumber","response","orderId","replicateOrder","mapLineItem","lineItem","price","centAmount","taxRate","includedInPrice","taxed","taxAmount","discountedPrice","fractionDigits","currencyCode","lineItemId","url","_url","sku","name","description","attributes","images","quantity","count","Math","pow","inStock","isOnStock","maxQuantity","availableQuantity","model","orderStatus","shipmentState","orderState","mapOrder","businessUnits","sum","mappedStatus","subtotal","tax","discount","shipping","calculateTransaction","find","bu","createdAt","toISOString","items","lineItems","taxCosts","shippingCosts","isFromAQuote","quoteId","purchaseOrderNumber"],"sourceRoot":"","ignoreList":[]}