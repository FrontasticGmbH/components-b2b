{"version":3,"file":"static/chunks/1767.8e471029e261f471.js","mappings":"mQAkEA,MAjDyC,QAalBA,EAAAA,EAFuCC,KAXpB,MAAED,CAAI,CAA4C,GACpFE,EAASC,CAAAA,EAAAA,EAAAA,CAAAA,CAAeA,GAExB,SAAEC,CAAO,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,CAAUA,CA8CeC,EA5CvC,eAAEC,CAAa,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,CAAgBA,GAEpC,sBAAEP,CAAoB,CAAE,CAAGQ,CAAAA,EAAAA,EAAAA,EAAAA,CAAwBA,GAEnD,aAAEC,CAAW,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,CAAeA,OAACV,EAAAA,KAAAA,EAAAA,EAAsBW,GAAG,EAE3D,iBAFkCX,GAEhCY,CAAkB,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,CAASA,CAAC,CAAEC,gBAAiBd,QAAAA,QAAAA,EAAAA,KAAAA,EAAAA,EAAsBW,GAAG,GAAzBX,KAAAA,IAAAA,EAAAA,EAA6B,EAAG,CAAhCA,EAEtDe,EAAAA,QAAehB,EAAAA,EAAKA,IAAAA,GAALA,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,QAAAA,EAAAA,EAAWiB,UAAAA,GAAXjB,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAuBgB,YAAY,CAExD,GAAI,CAACA,EAAc,MAAO,yBAE1B,IAAME,EAAqBC,CAAAA,EAAAA,EAAAA,CAAAA,CAAeA,CAACH,EAAc,eAAET,UAAeH,CAAQ,GAElF,MACE,UAACgB,MAAAA,UACC,UAACC,EAAAA,CAASA,CAAAA,CAACC,KAAMC,EAAAA,CAAcA,CAACC,MAAM,CAAEC,QAAQ,OAAErB,EAAAA,KAAAA,EAAAA,EAASsB,SAAS,UAClE,UAACC,EAAAA,CAAgBA,CAAAA,CACfC,MAAOV,EACPR,YAAa,CACXmB,UACE,CAAEX,EAAmBY,gBAAgB,EAAIpB,EAAYqB,cAAc,EAClEb,EAAmBY,gBAAgB,EAAIpB,EAAYsB,kBAAkB,CACxEC,WACE,CAAEf,EAAmBY,gBAAgB,EAAIpB,EAAYwB,eAAe,EACnEhB,EAAmBY,gBAAgB,EAAIpB,EAAYyB,mBAAmB,CACzEC,eACE,CAAElB,EAAmBY,gBAAgB,EAAIpB,EAAY2B,mBAAmB,EACvEnB,EAAmBY,gBAAgB,EAAIpB,EAAY4B,uBAAuB,CAC7EC,UACE,CAAErB,EAAmBY,gBAAgB,EAAIpB,EAAY8B,qBAAqB,EACzEtB,EAAmBY,gBAAgB,EAAIpB,EAAY+B,yBAAyB,EAEjFC,cAAc,IACdC,SAAU,UACR,MAAM9B,EAAmBG,EAAa4B,cAAc,EACpD1C,EAAO2C,OAAO,EAChB,OAKV","sources":["webpack://_N_E/./src/lib/tastics/quote-request-detail/components/quote-request-detail-client-wrapper/index.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { DataSource } from '@/types/lib/datasources';\nimport Dashboard from '@/components/pages/dashboard';\nimport { DashboardLinks } from '@/components/pages/dashboard/constants';\nimport QuoteDetailsPage from '@/components/pages/dashboard/pages/quote-details';\nimport { mapQuoteRequest } from '@/utils/mappers/map-quote';\nimport useAccount from '@/lib/hooks/useAccount';\nimport useQuotes from '@/lib/hooks/useQuotes';\nimport { useStoreAndBusinessUnits } from '@/providers/store-and-business-units';\nimport useCustomRouter from '@/hooks/useCustomRouter';\nimport useAccountRoles from '@/lib/hooks/useAccountRoles';\nimport { TasticProps } from '@/lib/tastics/types';\nimport useBusinessUnits from '@/lib/hooks/useBusinessUnits';\nimport { DataSourceProps } from '../../types';\n\nconst QuoteRequestDetailsClientWrapper = ({ data }: TasticProps<DataSource<DataSourceProps>>) => {\n  const router = useCustomRouter();\n\n  const { account } = useAccount();\n\n  const { businessUnits } = useBusinessUnits();\n\n  const { selectedBusinessUnit } = useStoreAndBusinessUnits();\n\n  const { permissions } = useAccountRoles(selectedBusinessUnit?.key);\n\n  const { cancelQuoteRequest } = useQuotes({ businessUnitKey: selectedBusinessUnit?.key ?? '' });\n\n  const quoteRequest = data.data?.dataSource?.quoteRequest;\n\n  if (!quoteRequest) return <></>;\n\n  const mappedQuoteRequest = mapQuoteRequest(quoteRequest, { businessUnits, account });\n\n  return (\n    <div data-testid={`quote_request-${quoteRequest.quoteRequestId}`}>\n      <Dashboard href={DashboardLinks.quotes} userName={account?.firstName}>\n        <QuoteDetailsPage\n          quote={mappedQuoteRequest}\n          permissions={{\n            canAccept:\n              (!mappedQuoteRequest.ownedByOtherUser && permissions.AcceptMyQuotes) ||\n              (mappedQuoteRequest.ownedByOtherUser && permissions.AcceptOthersQuotes),\n            canDecline:\n              (!mappedQuoteRequest.ownedByOtherUser && permissions.DeclineMyQuotes) ||\n              (mappedQuoteRequest.ownedByOtherUser && permissions.DeclineOthersQuotes),\n            canRenegotiate:\n              (!mappedQuoteRequest.ownedByOtherUser && permissions.RenegotiateMyQuotes) ||\n              (mappedQuoteRequest.ownedByOtherUser && permissions.RenegotiateOthersQuotes),\n            canRevoke:\n              (!mappedQuoteRequest.ownedByOtherUser && permissions.UpdateMyQuoteRequests) ||\n              (mappedQuoteRequest.ownedByOtherUser && permissions.UpdateOthersQuoteRequests),\n          }}\n          isQuoteRequest\n          onRevoke={async () => {\n            await cancelQuoteRequest(quoteRequest.quoteRequestId as string);\n            router.refresh();\n          }}\n        />\n      </Dashboard>\n    </div>\n  );\n};\n\nexport default QuoteRequestDetailsClientWrapper;\n"],"names":["data","selectedBusinessUnit","router","useCustomRouter","account","useAccount","QuoteRequestDetailsClientWrapper","businessUnits","useBusinessUnits","useStoreAndBusinessUnits","permissions","useAccountRoles","key","cancelQuoteRequest","useQuotes","businessUnitKey","quoteRequest","dataSource","mappedQuoteRequest","mapQuoteRequest","div","Dashboard","href","DashboardLinks","quotes","userName","firstName","QuoteDetailsPage","quote","canAccept","ownedByOtherUser","AcceptMyQuotes","AcceptOthersQuotes","canDecline","DeclineMyQuotes","DeclineOthersQuotes","canRenegotiate","RenegotiateMyQuotes","RenegotiateOthersQuotes","canRevoke","UpdateMyQuoteRequests","UpdateOthersQuoteRequests","isQuoteRequest","onRevoke","quoteRequestId","refresh"],"sourceRoot":"","ignoreList":[]}