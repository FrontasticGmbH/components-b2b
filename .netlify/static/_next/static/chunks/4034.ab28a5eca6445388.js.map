{"version":3,"file":"static/chunks/4034.ab28a5eca6445388.js","mappings":"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","sources":["webpack://_N_E/./src/lib/hooks/useApprovalFlows/index.ts","webpack://_N_E/./src/lib/tastics/checkout/hooks/usePaymentMethods/index.ts","webpack://_N_E/./src/lib/tastics/checkout/components/checkout-client-wrapper/index.tsx"],"sourcesContent":["import { useCallback } from 'react';\nimport useSWR, { useSWRConfig, Key } from 'swr';\nimport { sdk } from '@/sdk';\nimport { UseApprovalFlowsOptions } from './types';\n\nconst useApprovalFlows = ({\n  businessUnitKey,\n  filters: { searchQuery, status, cursor } = {},\n}: UseApprovalFlowsOptions) => {\n  const { data, ...response } = useSWR(\n    !businessUnitKey ? null : ['/action/business-unit/queryApprovalFlows', businessUnitKey, searchQuery, status],\n    () =>\n      sdk.composableCommerce.businessUnit.queryApprovalFlows({\n        businessUnitKey: businessUnitKey as string,\n        approvalFlowIds: [...(searchQuery ? [searchQuery] : [])],\n        approvalFlowStatus: [...(status ? [status] : [])],\n        cursor,\n        sortAttributes: [{ createdAt: 'desc' }],\n      }),\n  );\n\n  const isLoading = !businessUnitKey || response.isLoading;\n\n  const { mutate: mutateSwr } = useSWRConfig();\n\n  const mutateAll = useCallback(() => {\n    mutateSwr(\n      (key: Key) => {\n        return typeof key === 'object' && key?.[0].startsWith('/action/business-unit/queryApprovalFlows');\n      },\n      undefined,\n      {\n        revalidate: true,\n      },\n    );\n  }, [mutateSwr]);\n\n  const approvalFlows = data?.isError ? [] : (data?.data?.items ?? []);\n\n  const totalItems = data?.isError ? 0 : (data?.data.total ?? 0);\n\n  const [previousCursor, nextCursor] = data?.isError\n    ? [undefined, undefined]\n    : [data?.data.previousCursor, data?.data.nextCursor];\n\n  const approveApprovalFlow = useCallback(\n    async (approvalFlowId: string) => {\n      if (!businessUnitKey) return;\n\n      const res = await sdk.composableCommerce.businessUnit.approveApprovalFlow({ approvalFlowId }, { approvalFlowId });\n\n      if (!res?.isError && res.data.approvalFlowId) mutateAll();\n\n      return res.isError ? null : res.data;\n    },\n    [businessUnitKey, mutateAll],\n  );\n\n  const rejectApprovalFlow = useCallback(\n    async (approvalFlowId: string, reason?: string) => {\n      if (!businessUnitKey) return;\n\n      const res = await sdk.composableCommerce.businessUnit.rejectApprovalFlow(\n        { approvalFlowId, reason: reason ?? '' },\n        { approvalFlowId, reason: reason ?? '' },\n      );\n\n      if (!res?.isError && res.data.approvalFlowId) mutateAll();\n\n      return res.isError ? null : res.data;\n    },\n    [businessUnitKey, mutateAll],\n  );\n\n  return {\n    approvalFlows,\n    isLoading,\n    totalItems,\n    previousCursor,\n    nextCursor,\n    approveApprovalFlow,\n    rejectApprovalFlow,\n    mutateAll,\n  };\n};\n\nexport default useApprovalFlows;\n","import useCart from '@/lib/hooks/useCart';\nimport { CheckoutPayload } from '@/lib/hooks/useCart/types';\nimport useTranslation from '@/providers/I18n/hooks/useTranslation';\nimport { useStoreAndBusinessUnits } from '@/providers/store-and-business-units';\n\nconst usePaymentMethods = () => {\n  const { translate } = useTranslation();\n\n  const { selectedBusinessUnit, selectedStore } = useStoreAndBusinessUnits();\n\n  const { checkout } = useCart(selectedBusinessUnit?.key, selectedStore?.key);\n\n  const paymentMethods = [\n    {\n      id: 'purchase.order',\n      name: `${translate('checkout.purchase.order')} (PO)`,\n      description: translate('checkout.purchase.order.desc'),\n      image: {\n        src: '',\n        className: '',\n      },\n      async makePayment(data: unknown) {\n        const order = await checkout(data as CheckoutPayload);\n        return order.orderId;\n      },\n    },\n  ];\n\n  return paymentMethods;\n};\n\nexport default usePaymentMethods;\n","'use client';\n\nimport React, { useState } from 'react';\nimport useCustomRouter from '@/hooks/useCustomRouter';\nimport Checkout from '@/components/organisms/checkout';\nimport { resolveReference } from '@/utils/lib/resolve-reference';\nimport { mapAddress, mapCoCoAddress } from '@/utils/mappers/map-address';\nimport useCart from '@/lib/hooks/useCart';\nimport useBusinessUnits from '@/lib/hooks/useBusinessUnits';\nimport { mapLineItem } from '@/utils/mappers/map-lineitem';\nimport { mapShippingMethod } from '@/utils/mappers/map-shipping-method';\nimport toast from '@/components/atoms/toaster/helpers/toast';\nimport useTranslation from '@/providers/I18n/hooks/useTranslation';\nimport { useStoreAndBusinessUnits } from '@/providers/store-and-business-units';\nimport useAccount from '@/lib/hooks/useAccount';\nimport { TasticProps } from '@/lib/tastics/types';\nimport { isEmptyObject } from '@/utils/object/is-empty-object';\nimport { Address } from '@/types/entity/address';\nimport useApprovalFlows from '@/lib/hooks/useApprovalFlows';\nimport useProjectSettings from '@/lib/hooks/useProjectSettings';\nimport { mapCountry } from '@/utils/mappers/map-country';\nimport { Props } from '../../types';\nimport usePaymentMethods from '../../hooks/usePaymentMethods';\n\nconst CheckoutClientWrapper = ({ data }: TasticProps<Props>) => {\n  const router = useCustomRouter();\n\n  const { projectSettings } = useProjectSettings();\n\n  const { account } = useAccount();\n\n  const { translate } = useTranslation();\n\n  const { addAddress } = useBusinessUnits();\n\n  const { selectedBusinessUnit, selectedStore } = useStoreAndBusinessUnits();\n\n  const { mutateAll: mutateAllApprovalFlows } = useApprovalFlows({ businessUnitKey: selectedBusinessUnit?.key });\n\n  const { cart, updateCart, setShippingMethod, redeemDiscount, removeDiscount } = useCart(\n    selectedBusinessUnit?.key,\n    selectedStore?.key,\n  );\n\n  const paymentMethods = usePaymentMethods();\n\n  const [selectedPaymentMethod, setSelectedPaymentMethod] = useState<(typeof paymentMethods)[0]>();\n  const [paymentData, setPaymentData] = useState<unknown>({});\n\n  return (\n    <Checkout\n      initialData={{\n        shippingAddress:\n          cart?.shippingAddress && !isEmptyObject(cart.shippingAddress)\n            ? mapAddress(cart?.shippingAddress as Address)\n            : undefined,\n        billingAddress:\n          cart?.billingAddress && !isEmptyObject(cart.billingAddress)\n            ? mapAddress(cart?.billingAddress as Address)\n            : undefined,\n        shippingMethodId: cart?.shippingInfo?.shippingMethodId,\n      }}\n      paymentMethods={paymentMethods}\n      discounts={(cart?.discountCodes ?? []).map(({ discountId, name, code }) => ({\n        name: name ?? '',\n        code: code ?? '',\n        onRemove: async () => {\n          const res = await removeDiscount(discountId ?? '');\n          return !!res.cartId;\n        },\n      }))}\n      transaction={{\n        subtotal: cart?.transaction.subtotal.centAmount ?? 0,\n        discounts: cart?.transaction.discount.centAmount ?? 0,\n        shipping: {\n          isEstimated: !cart?.shippingInfo,\n          amount: cart?.transaction.shipping.centAmount ?? 0,\n        },\n        taxes: cart?.transaction.tax.centAmount ?? 0,\n        total: cart?.transaction.total.centAmount ?? 0,\n        currency: cart?.transaction.total.currencyCode ?? 'USD',\n      }}\n      translations={{\n        review: translate('checkout.review.order'),\n      }}\n      products={(cart?.lineItems ?? []).map(mapLineItem)}\n      addresses={selectedBusinessUnit?.addresses ?? []}\n      shippingMethods={(cart?.availableShippingMethods ?? []).map(mapShippingMethod)}\n      countryOptions={(projectSettings?.countries ?? []).map(mapCountry).map(({ name, code, states }) => ({\n        name,\n        value: code,\n        states: states.map(({ name, code }) => ({ name, value: code })),\n      }))}\n      termsAndConditionsLink={resolveReference(data.termsAndConditionsLink)}\n      onAddAddress={async (address) => {\n        if (!selectedBusinessUnit?.key) return false;\n\n        const response = await addAddress({ ...mapCoCoAddress(address), businessUnitKey: selectedBusinessUnit?.key });\n        return !!response.businessUnitId;\n      }}\n      onApplyDiscount={async (code) => {\n        const res = await redeemDiscount(code);\n        return !!res.cartId;\n      }}\n      onCompleteAddresses={async (shippingAddress, billingAddress) => {\n        if (!account) return false;\n\n        const response = await updateCart({\n          email: account.email,\n          shipping: mapCoCoAddress(shippingAddress),\n          billing: mapCoCoAddress(billingAddress),\n        });\n\n        return response.success;\n      }}\n      onCompleteShipping={async (shippingMethodId) => {\n        const response = await setShippingMethod(shippingMethodId);\n\n        return !!response.cartId;\n      }}\n      onCompletePayment={async (paymentMethodId, data) => {\n        const paymentMethod = paymentMethods.find((method) => method.id === paymentMethodId);\n\n        if (!paymentMethod) return false;\n\n        setSelectedPaymentMethod(paymentMethod);\n        setPaymentData(data);\n\n        return true;\n      }}\n      onSubmitPurchase={async () => {\n        if (!selectedPaymentMethod) return false;\n\n        const orderId = await selectedPaymentMethod.makePayment(paymentData);\n\n        if (orderId) {\n          mutateAllApprovalFlows();\n          router.push(`/thank-you?orderId=${orderId}`);\n        } else toast.error(translate('common.something.went.wrong'), { position: 'top-right' });\n\n        return !!orderId;\n      }}\n    />\n  );\n};\n\nexport default CheckoutClientWrapper;\n"],"names":["data","useApprovalFlows","businessUnitKey","filters","searchQuery","status","cursor","response","useSWR","sdk","composableCommerce","businessUnit","queryApprovalFlows","approvalFlowIds","approvalFlowStatus","sortAttributes","createdAt","isLoading","mutate","mutateSwr","useSWRConfig","mutateAll","useCallback","key","startsWith","undefined","revalidate","approvalFlows","isError","items","totalItems","total","previousCursor","nextCursor","approveApprovalFlow","approvalFlowId","res","rejectApprovalFlow","reason","translate","useTranslation","usePaymentMethods","selectedBusinessUnit","selectedStore","useStoreAndBusinessUnits","checkout","useCart","id","name","description","image","src","className","makePayment","order","orderId","cart","CheckoutClientWrapper","projectSettings","useCustomRouter","useProjectSettings","account","useAccount","addAddress","useBusinessUnits","mutateAllApprovalFlows","updateCart","setShippingMethod","redeemDiscount","removeDiscount","paymentMethods","selectedPaymentMethod","setSelectedPaymentMethod","useState","paymentData","setPaymentData","Checkout","initialData","shippingAddress","isEmptyObject","mapAddress","billingAddress","shippingMethodId","shippingInfo","discounts","discountCodes","map","discountId","code","onRemove","cartId","transaction","subtotal","centAmount","discount","shipping","isEstimated","amount","taxes","tax","currency","currencyCode","translations","review","products","lineItems","mapLineItem","addresses","shippingMethods","availableShippingMethods","mapShippingMethod","countryOptions","countries","mapCountry","states","value","termsAndConditionsLink","resolveReference","onAddAddress","address","mapCoCoAddress","businessUnitId","onCompleteAddresses","email","billing","success","onCompleteShipping","onCompletePayment","paymentMethodId","paymentMethod","find","method","onSubmitPurchase","router","toast","error","position"],"sourceRoot":"","ignoreList":[]}