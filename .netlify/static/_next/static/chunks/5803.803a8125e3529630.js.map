{"version":3,"file":"static/chunks/5803.803a8125e3529630.js","mappings":"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","sources":["webpack://_N_E/./src/components/molecules/address-form/index.tsx","webpack://_N_E/./src/components/organisms/confirmation/index.tsx","webpack://_N_E/./src/components/pages/dashboard/pages/company-admin/components/addresses-table/index.tsx","webpack://_N_E/./node_modules/@heroicons/react/24/outline/esm/PencilSquareIcon.js","webpack://_N_E/./node_modules/@heroicons/react/24/outline/esm/TrashIcon.js"],"sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport EntityForm from '@/components/organisms/entity-form';\nimport useTranslation from '@/providers/I18n/hooks/useTranslation';\nimport Input from '@/components/atoms/input';\nimport Select from '@/components/atoms/select';\nimport Checkbox from '@/components/atoms/checkbox';\nimport { Address } from '@/types/entity/address';\nimport useEntityToasters from '@/hooks/useEntityToasters';\nimport { AddressFormProps } from './types';\n\nconst AddressForm = ({\n  onAddAddress,\n  onUpdateAddress,\n  addresses,\n  countryOptions,\n  onSave,\n  onCancel,\n  unstyled = false,\n  toasters = true,\n  translations = {},\n  showPhoneField = true,\n  showCancelButton = true,\n  showSubmitButton = true,\n  showDefaultCheckBoxes = true,\n}: AddressFormProps) => {\n  const { translate } = useTranslation();\n\n  const { showSavedMessage, showFailedMessage } = useEntityToasters('address');\n\n  const router = useRouter();\n\n  const params = useSearchParams();\n\n  const id = params.get('id');\n\n  const defaultValues = (addresses.find((address) => address.id === id) ?? {}) as Partial<Address>;\n\n  const [data, setData] = useState<Partial<Address>>(defaultValues);\n\n  const [showLine2, setShowLine2] = useState(false);\n\n  const selectedCountry = countryOptions.find((option) => option.value === data.country);\n\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setData({ ...data, [e.target.name]: e.target.value });\n    },\n    [data],\n  );\n\n  const handleSubmit = useCallback(async () => {\n    if (!(data.name && data.country && data.line1 && data.zip && data.city)) return;\n\n    const success = await (id ? onUpdateAddress?.(data) : onAddAddress?.(data as Address));\n\n    if (toasters) {\n      if (success) showSavedMessage();\n      else showFailedMessage();\n    }\n\n    (onSave ?? router.back)();\n  }, [onUpdateAddress, onAddAddress, data, id, router, showSavedMessage, showFailedMessage, onSave, toasters]);\n\n  return (\n    <EntityForm\n      unstyled={unstyled}\n      translations={{\n        cancel: translations.cancel ?? translate('common.cancel'),\n        submit: translations.submit ?? translate('common.save'),\n      }}\n      showSubmitButton={showSubmitButton}\n      showCancelButton={showCancelButton}\n      onSubmit={handleSubmit}\n      onCancel={onCancel ?? router.back}\n    >\n      <div className=\"flex flex-col gap-4\">\n        <Input\n          name=\"name\"\n          label={translate('common.company.name')}\n          required\n          value={data.name ?? ''}\n          onChange={handleChange}\n          containerClassName=\"max-w-[400px]\"\n        />\n\n        <Input\n          name=\"careOf\"\n          label={translate('common.care.of')}\n          showOptionalLabel\n          value={data.careOf ?? ''}\n          onChange={handleChange}\n          containerClassName=\"max-w-[400px]\"\n        />\n\n        {showPhoneField && (\n          <Input\n            name=\"phone\"\n            label={translate('common.phone')}\n            showOptionalLabel\n            optionalLabel={translate('common.optional.for.order.updates')}\n            value={data.phone ?? ''}\n            onChange={handleChange}\n            containerClassName=\"max-w-[400px]\"\n          />\n        )}\n\n        <Select\n          label={translate('common.country')}\n          required\n          className=\"max-w-[400px]\"\n          placeholder={translate('common.select')}\n          value={data.country ?? ''}\n          onChange={(country) => setData({ ...data, country })}\n          options={countryOptions}\n        />\n\n        <Input\n          name=\"line1\"\n          label={translate('common.address')}\n          required\n          value={data.line1 ?? ''}\n          onChange={handleChange}\n          containerClassName=\"max-w-[400px]\"\n        />\n\n        {showLine2 ? (\n          <Input\n            name=\"line2\"\n            label={`${translate('common.address')} 2`}\n            showOptionalLabel\n            value={data.line2 ?? ''}\n            onChange={handleChange}\n            containerClassName=\"max-w-[400px]\"\n          />\n        ) : (\n          <span className=\"w-fit cursor-pointer text-14 font-medium text-gray-700\" onClick={() => setShowLine2(true)}>\n            + {translate('dashboard.add.another.address')}\n          </span>\n        )}\n\n        <div className=\"flex max-w-[400px] gap-3\">\n          <Input\n            name=\"zip\"\n            label={translate('common.zipCode')}\n            required\n            value={data.zip ?? ''}\n            onChange={handleChange}\n            containerClassName=\"w-[100px] min-w-[100px]\"\n          />\n          <div className=\"grow\">\n            <Input\n              name=\"city\"\n              label={translate('common.city')}\n              required\n              value={data.city ?? ''}\n              onChange={handleChange}\n            />\n          </div>\n        </div>\n\n        {!!selectedCountry?.states?.length && (\n          <Select\n            label={translate('common.state')}\n            required\n            className=\"max-w-[400px]\"\n            placeholder={translate('common.state')}\n            value={data.state ?? ''}\n            onChange={(state) => setData({ ...data, state })}\n            options={selectedCountry.states}\n          />\n        )}\n\n        {showDefaultCheckBoxes && (\n          <>\n            <p className=\"cursor-pointer text-14 font-medium text-gray-700\">{translate('dashboard.save.as.default')}</p>\n\n            <div className=\"flex items-center gap-5\">\n              <Checkbox\n                checked={!!data.isDefaultShipping}\n                label={translate('common.address.shipping')}\n                onChecked={(checked) => setData({ ...data, isDefaultShipping: checked })}\n              />\n              <Checkbox\n                checked={!!data.isDefaultBilling}\n                label={translate('common.address.billing')}\n                onChecked={(checked) => setData({ ...data, isDefaultBilling: checked })}\n              />\n            </div>\n          </>\n        )}\n      </div>\n    </EntityForm>\n  );\n};\n\nexport default AddressForm;\n","'use client';\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport Button from '@/components/atoms/button';\nimport useScrollBlock from '@/hooks/useScrollBlock';\nimport useControllableState from '@/hooks/useControllableState';\nimport { ConfirmationProps } from './types';\nimport ResponsiveModal from '../responsive-modal';\n\nconst Confirmation = ({\n  children,\n  translations,\n  onCancel,\n  onConfirm,\n  isOpen: isOpenProp,\n  disabled = false,\n  className = '',\n}: React.PropsWithChildren<ConfirmationProps>) => {\n  const [isOpen, setIsOpen] = useControllableState(isOpenProp, false);\n\n  const onOpen = useCallback(() => setIsOpen(true), [setIsOpen]);\n  const onClose = useCallback(() => setIsOpen(false), [setIsOpen]);\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { blockScroll } = useScrollBlock();\n\n  useEffect(() => {\n    blockScroll(isOpen);\n\n    return () => blockScroll(false);\n  }, [isOpen, blockScroll]);\n\n  const handleCancel = useCallback(() => {\n    onCancel?.();\n    onClose();\n  }, [onCancel, onClose]);\n\n  const handleConfirm = useCallback(async () => {\n    setIsLoading(true);\n    await onConfirm?.();\n    setIsLoading(false);\n    onClose();\n  }, [onConfirm, onClose]);\n\n  return (\n    <>\n      <div className={className} onClick={onOpen}>\n        {children}\n      </div>\n      <ResponsiveModal className=\"lg:max-w-[400px]\" isOpen={isOpen} onRequestClose={handleCancel} closeButton>\n        <div className=\"px-6\">\n          <h4 className=\"pb-4 pt-6 text-20 font-semibold text-gray-800\">{translations.title}</h4>\n          <p className=\"text-14 text-gray-700\">{translations.summary}</p>\n        </div>\n        <div className=\"mt-5 flex items-center justify-end gap-3 border-t border-neutral-400 p-6\">\n          <Button variant=\"secondary\" size=\"m\" className=\"min-w-[112px]\" onClick={handleCancel}>\n            {translations.cancel}\n          </Button>\n          {!disabled && (\n            <Button variant=\"warning\" size=\"m\" className=\"min-w-[112px]\" onClick={handleConfirm} loading={isLoading}>\n              {translations.confirm}\n            </Button>\n          )}\n        </div>\n      </ResponsiveModal>\n    </>\n  );\n};\n\nexport default Confirmation;\n","import React, { useCallback } from 'react';\nimport Table from '@/components/organisms/table';\nimport useTranslation from '@/providers/I18n/hooks/useTranslation';\nimport { PencilSquareIcon as EditIcon, TrashIcon as DeleteIcon } from '@heroicons/react/24/outline';\nimport Confirmation from '@/components/organisms/confirmation';\nimport Link from '@/components/atoms/link';\nimport useEntityToasters from '@/hooks/useEntityToasters';\nimport { CompanyAdminPageProps } from '../../types';\n\nconst AddressesTable = ({ onDeleteAddress, addresses = [], addressesAreViewOnly }: Partial<CompanyAdminPageProps>) => {\n  const { translate } = useTranslation();\n\n  const { showDeletedMessage, showDeletedFailedMessage } = useEntityToasters('address');\n\n  const handleDelete = useCallback(\n    async (id: string) => {\n      const success = await onDeleteAddress?.(id);\n\n      if (success) showDeletedMessage();\n      else showDeletedFailedMessage();\n    },\n    [showDeletedMessage, showDeletedFailedMessage, onDeleteAddress],\n  );\n\n  return (\n    <Table>\n      <Table.Container>\n        <Table.Head>\n          <Table.Cell isHeadCell>{translate('common.name')}</Table.Cell>\n          <Table.Cell isHeadCell>{translate('common.use')}</Table.Cell>\n          <Table.Cell isHeadCell>{translate('common.address')}</Table.Cell>\n          <Table.Cell isHeadCell>{`${translate('common.city')}, ${translate('common.state')}`}</Table.Cell>\n          <Table.Cell isHeadCell>{translate('common.zipCode')}</Table.Cell>\n          <Table.Cell isHeadCell>{translate('common.country')}</Table.Cell>\n          <Table.Cell />\n        </Table.Head>\n        <Table.Body>\n          {addresses.map(({ id, name, line1, city, state, zip, country, isDefaultBilling, isDefaultShipping }) => (\n            <Table.Row key={id}>\n              <Table.Cell>{name}</Table.Cell>\n              <Table.Cell>\n                {isDefaultBilling || isDefaultShipping ? (\n                  <>\n                    <span className=\"text-14\">{translate('dashboard.default.for')}</span>{' '}\n                    <span className=\"text-14 font-medium lowercase\">\n                      {[\n                        ...(isDefaultShipping ? [translate('common.shipping')] : []),\n                        ...(isDefaultBilling ? [translate('common.billing')] : []),\n                      ].join(', ')}\n                    </span>\n                  </>\n                ) : (\n                  '-'\n                )}\n              </Table.Cell>\n              <Table.Cell>{line1}</Table.Cell>\n              <Table.Cell>\n                <span className=\"text-14\">\n                  {city}, {state}\n                </span>\n              </Table.Cell>\n              <Table.Cell>{zip}</Table.Cell>\n              <Table.Cell>{country}</Table.Cell>\n              <Table.Cell>\n                {!addressesAreViewOnly && (\n                  <div className=\"flex items-center justify-end gap-5 text-primary\">\n                    <Confirmation\n                      translations={{\n                        title: translate('dashboard.address.delete'),\n                        summary: translate('dashboard.address.delete.confirm'),\n                        cancel: translate('common.cancel'),\n                        confirm: translate('common.delete'),\n                      }}\n                      onConfirm={async () => handleDelete(id)}\n                    >\n                      <DeleteIcon className=\"cursor-pointer\" width={20} />\n                    </Confirmation>\n                    <Link aria-label={translate('dashboard.address.edit')} href={`?subPath=edit-address&id=${id}`}>\n                      <EditIcon className=\"cursor-pointer\" width={20} />\n                    </Link>\n                  </div>\n                )}\n              </Table.Cell>\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table.Container>\n    </Table>\n  );\n};\n\nexport default AddressesTable;\n","import * as React from \"react\";\nfunction PencilSquareIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897l8.932-8.931Zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0 1 15.75 21H5.25A2.25 2.25 0 0 1 3 18.75V8.25A2.25 2.25 0 0 1 5.25 6H10\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(PencilSquareIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction TrashIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(TrashIcon);\nexport default ForwardRef;"],"names":["selectedCountry","addresses","translations","data","AddressForm","onAddAddress","onUpdateAddress","countryOptions","onSave","onCancel","unstyled","toasters","showPhoneField","showCancelButton","showSubmitButton","showDefaultCheckBoxes","translate","useTranslation","showSavedMessage","showFailedMessage","useEntityToasters","router","useRouter","id","useSearchParams","get","defaultValues","find","address","setData","useState","showLine2","setShowLine2","option","value","country","handleChange","useCallback","e","target","name","handleSubmit","line1","zip","city","success","back","EntityForm","cancel","submit","onSubmit","div","className","Input","label","required","onChange","containerClassName","showOptionalLabel","careOf","optionalLabel","phone","Select","placeholder","options","line2","span","onClick","states","length","state","p","Checkbox","checked","isDefaultShipping","onChecked","isDefaultBilling","children","Confirmation","onConfirm","isOpen","isOpenProp","disabled","setIsOpen","useControllableState","onOpen","onClose","isLoading","setIsLoading","blockScroll","useScrollBlock","useEffect","handleCancel","handleConfirm","ResponsiveModal","onRequestClose","closeButton","h4","title","summary","Button","variant","size","loading","confirm","onDeleteAddress","AddressesTable","addressesAreViewOnly","showDeletedMessage","showDeletedFailedMessage","handleDelete","Table","Container","Head","Cell","isHeadCell","Body","map","Row","join","DeleteIcon","width","Link","aria-label","href","EditIcon","React","PencilSquareIcon","svgRef","ForwardRef","titleId","props","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","strokeLinecap","strokeLinejoin","d","TrashIcon"],"sourceRoot":"","ignoreList":[3,4]}